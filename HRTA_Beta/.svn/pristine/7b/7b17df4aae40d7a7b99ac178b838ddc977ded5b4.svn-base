package com.toogram.cep.ui;

import org.apache.axis2.AxisFault;
import org.apache.axis2.transport.http.HTTPConstants;
import org.apache.axis2.client.Options;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.context.ConfigurationContext;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.event.input.adaptor.manager.stub.InputEventAdaptorManagerAdminServiceStub;
import org.wso2.carbon.authenticator.stub.AuthenticationAdminStub;
import org.wso2.carbon.core.common.AuthenticationException;

import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.axis2.context.ServiceContext;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class ToogramAuthentificationUtils {
	
	private static Log log = LogFactory.getLog(CepUILoginUtil.class);
    public static boolean getAuthnficationResult(HttpSession session,String userName, String passWord, String serverURL
            ) throws AxisFault {
        
//        String SEVER_URL = "https://210.109.9.181:9443/services/";
//        String USER_NAME = "admin";
//        String PASSWORD = "admin";
                
        String SEVER_URL = "https://" + serverURL + ":9443/services/";
        String USER_NAME = userName;
        String PASSWORD = passWord;
        
        //log.info("url : " + ServerUrl);
        
        //여기서 일단 쿠키를 받아 오자.    

        String AUTHENTICATION_ADMIN_SERVICE_URL = "AuthenticationAdmin";
         
        //Create an instance of a Authentication stub
        AuthenticationAdminStub authenticationStub = new AuthenticationAdminStub(SEVER_URL +  AUTHENTICATION_ADMIN_SERVICE_URL);
         
        // log in with the username=admin and password=admin.
        // They are the default username, passowrd of carbon super admin user.
        boolean loginStatus = false;
        try {
        	loginStatus = authenticationStub.login(USER_NAME, PASSWORD,serverURL);
        } catch (Exception e) {
            //throw new AuthenticationException(e.getMessage(), e);
        	e.printStackTrace();
        }
        //System.out.println("login " + loginStatus);
         
        ServiceContext serviceContext = authenticationStub._getServiceClient().getLastOperationContext().getServiceContext();
        
         
        //세션 쿠키를 받아와서 처리 한다.
        String sessionCookie = (String) serviceContext.getProperty(HTTPConstants.COOKIE_STRING);
        session.setAttribute("authCookie", sessionCookie);
        session.setAttribute("serverURL", SEVER_URL);
        
        return loginStatus;
    }

}